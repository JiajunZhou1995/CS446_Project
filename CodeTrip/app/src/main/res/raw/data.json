[
  {
    "Available": "true",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Print",
    "Total": "7",
    "Position": "0L0",
    "Question": [
      {
        "Answer": [
          "Hello World"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "Print is a function in Python.",
        "Instruction": "Let’s drag and drop a code block into the code.",
        "Code": [
          "print([?])"
        ],
        "Console": "1",
        "CodeBlock": [
          "\"Hello World\""
        ],
        "Choice": [],
        "Hint": "Drag and drop Hello World into [?]"
      },
      {
        "Answer": [
          "Hello World"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "Function will have a function name follow by (), and whatever in the () will be passed as parameter.",
        "Instruction": "Let’s drag and drop a code block into the code.",
        "Code": [
          "[?](\"Hello World\")"
        ],
        "Console": "1",
        "CodeBlock": [
          "print()",
          "print"
        ],
        "Choice": [],
        "Hint": "Drag and drop [print] into [?]"
      },
      {
        "Answer": [
          "1"
        ],
        "Type": "MultipleChoice",
        "Knowledge": null,
        "Instruction": "Guess the output of this program",
        "Code": [
          "print(\"Hi\")"
        ],
        "Console": "0",
        "CodeBlock": [],
        "Choice": [
          "Hi",
          "Hello"
        ],
        "Hint": "What's in the function? "
      },
      {
        "Answer": [
          "Hello There"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "Print function will print words into the console. ",
        "Instruction": "Let’s drag and drop a code block into the code so it will print Hello There.",
        "Code": [
          "print([?])"
        ],
        "Console": "1",
        "CodeBlock": [
          "\"Hello World\"",
          "\"Hello There\""
        ],
        "Choice": [],
        "Hint": " Drag and drop Hello There into [?]"
      },
      {
        "Answer": [],
        "Type": "Drag&Drop",
        "Knowledge": "You can have multiple print function at once. ",
        "Instruction": "Let’s drag and drop a code block into the code.",
        "Code": [
          "print(\"Hi\")",
          "print([?])"
        ],
        "Console": "2",
        "CodeBlock": [
          "\"I’m a dog person\"",
          "\"I’m a cat person\""
        ],
        "Choice": [],
        "Hint": "Drag and drop any block into [?]"
      },
      {
        "Answer": [],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Rearrange following code to make it print \"Code\" before \"Trip\".",
        "Code": [
          "print(\"Trip\")",
          "print(\"Code\")"
        ],
        "Console": "2",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Rearrange Code before Trip."
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "MultipleChoice",
        "Knowledge": null,
        "Instruction": "What does print() do?",
        "Code": [],
        "Console": "0",
        "CodeBlock": [],
        "Choice": [
          "Print words on paper",
          "Print words into console"
        ],
        "Hint": "We don't use paper in programing"
      }
    ]
  },
  {
    "Available": "false",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Variable",
    "Total": "4",
    "Position": "1R0",
    "Question": [
      {
        "Answer": [
          "Apple"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "You can print String which is a Variable.",
        "Instruction": null,
        "Code": [
          "fruit = [?]",
          "print([?])"
        ],
        "Console": "1",
        "CodeBlock": [
          "\"Apple\"",
          "fruit"
        ],
        "Choice": [],
        "Hint": "Drag Apple then the fruit"
      },
      {
        "Answer": [
          "Eatapple"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "You can have string concatenate together.",
        "Instruction": null,
        "Code": [
          "action = \"Eat\"",
          "fruit = \"apple\"",
          "print(action [?] fruit)"
        ],
        "Console": "1",
        "CodeBlock": [
          "+",
          "-"
        ],
        "Choice": [],
        "Hint": "We want then to add up"
      },
      {
        "Answer": [
          "apple"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "You can only print the Variable you have defined.",
        "Instruction": null,
        "Code": [
          "furit = \"apple\"",
          "print([?])"
        ],
        "Console": "1",
        "CodeBlock": [
          "animal",
          "\"furit\""
        ],
        "Choice": [],
        "Hint": "animal is not yet defined"
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "MultipleChoice",
        "Knowledge": "Once you defined a Varibale, you can update it by assigne it with a new value",
        "Instruction": "What will print out?",
        "Code": [
          "furit = apple",
          "furit = banana",
          "print(furit)"
        ],
        "Console": "0",
        "CodeBlock": [],
        "Choice": [
          "apple",
          "banana"
        ],
        "Hint": "I like banana more"
      }
    ]
  },
  {
    "Available": "false",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Arithmetic",
    "Total": "7",
    "Position": "1R1",
    "Question": [
      {
        "Answer": [],
        "Type": "Drag&Drop",
        "Knowledge": "Arithmetic operators in python are +, - , * ,/, which has the same meaning as in math expressions.",
        "Instruction": "Let's put different operator into block and see what happened?",
        "Code": [
          "x = 1",
          "y = 2",
          "z = x[?]y",
          "print(z)"
        ],
        "Console": "1",
        "CodeBlock": [
          "+",
          "-",
          "*",
          "/"
        ],
        "Choice": [],
        "Hint": "Play with it and see if there is any difference!"
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "MultipleChoice",
        "Knowledge": null,
        "Instruction": "Is expression 4 + 3 * 2 + 1 = 12 equal to be true?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "True",
          "False"
        ],
        "Hint": "Think about how will do it if you are taking a math class!"
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "MutipleChoice",
        "Knowledge": "When we doing math in python, do we need to apply the same rule as we used in math?",
        "Instruction": "Is there any difference between the following two expressions?",
        "Code": [
          "x = 3 + 2 * 5",
          "y = (3 + 2) * 5"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "Yes",
          "No",
          "I don't know",
          "Take a guess"
        ],
        "Hint": "Same as the normal mathematical cal1culations."
      },
      {
        "Answer": [
          "14"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "Parentheseses are used in python to decide the order of calculation.",
        "Instruction": "If we want get 14 for the following expression, where should we put parentheseses?",
        "Code": [
          "x = [?]4 * 3[?] + 2",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [
          "(",
          ")"
        ],
        "Choice": [],
        "Hint": "Think about how we use parentheseses in math."
      },
      {
        "Answer": [
          "16"
        ],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Look at the expression below, if we want to get 16, what numbers are you going to put into those blocks?",
        "Code": [
          "x = [?] + [?]",
          "y = [?] / [?]",
          "z = x * y",
          "print(z)"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "You can also put x and y in it, try it out!"
      },
      {
        "Answer": [],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Order of calculation will have different outcomes, rearrange the code below and see what will happen!",
        "Code": [
          "x = 1 + 2 / 2",
          "y = 1 * 2 * 3",
          "z = 3 * 3",
          "x = 4",
          "y = 2",
          "z = 11",
          "print(x)",
          "print(y)",
          "print(z)"
        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "There could be more than one order, find it out!."
      },
      {
        "Answer": ["240"],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Think about what we learned in variable class, this time we have variale in the code, rearrange it with the right order and see the result!",
        "Code": [
          "x = 1 + 4",
          "y = x * 2 * 3",
          "x = 4 * x",
          "y = 2 * x",
          "print(y)"

        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Recall from variable class, we can not use an undefined variable!"
      }
    ]
  },
  {
    "Available": "false",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Modulus",
    "Total": "5",
    "Position": "2L2",
    "Question": [
      {
        "Answer": [],
        "Type": "ShortAnswer",
        "Knowledge": "Modulus(%) is used to calculate the remainder.",
        "Instruction": "When we use operator %,  it means we want to do a remainder calculation, type in different numbers to see the difference!",
        "Code": [
          "print([?] % [?])"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Think about how we calculate remainder in math!"
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "MultipleChoice",
        "Knowledge": "When we want do calculate the remainder for the negative number, it follows the same rule as we do for the possitive number",
        "Instruction": "What's the result for 10 % 3?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "1",
          "2",
          "3",
          "4"
        ],
        "Hint": "% follows the same rule for the positive and the negative number."
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Look at the code below, if we want to print '2', in which order we should arrange the following code?",
        "Code": [
          "x = 1",
          "x = x - 1",
          "x = x * 3",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Think about what we learned in variable class."
      },
      {
        "Answer": [
          "0"
        ],
        "Type": "Drag&Drop",
        "Knowledge": null,
        "Instruction": "Drag and drop code block into the right position to calculate 0",
        "Code": [
          " x = (7 [?] 4) [?] 2 [?] 3 [?] 5",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [
          "+",
          "-",
          "*",
          "/",
          "%"
        ],
        "Choice": [],
        "Hint": "Can we do it without using '%'?."
      },
      {
        "Answer": [
          "2"
        ],
        "Type": "Drag&Drop",
        "Knowledge": null,
        "Instruction": "This time we will try to use numbers.Drag and drop code block into the right position to calculate 2",
        "Code": [
          " x = [?] % ([?] + [?]) * ([?] % [?])",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6"
        ],
        "Choice": [],
        "Hint": "There could be different answers!"
      }
    ]
  },
  {
    "Available": "false",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Boolean",
    "Total": "7",
    "Position": "3R2",
    "Question": [
      {
        "Answer": [
          "True"
        ],
        "Type": "MultipleChoice",
        "Knowledge": "Boolean in python are 'True' and 'False'",
        "Instruction": "Is 3 equals to 3 evaluted to be True or False?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "True",
          "False"
        ],
        "Hint": "Boolean expression only have two options."
      },
      {
        "Answer": [],
        "Type": "Drag&Drop",
        "Knowledge": "'<','<=','>','>=','==','!=' are used to evalute if the expression is true or false.",
        "Instruction": "Look at the code below and play with it, see what will be result will we get? Is there only two out comes for the following code?",
        "Code": [
          "x = 3 [?] 7",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [
          "<",
          "<=",
          ">",
          ">=",
          "==",
          "!="
        ],
        "Choice": [],
        "Hint": "Boolean expression could only be evaluted to be true or false."
      },
      {
        "Answer": [
          "True"
        ],
        "Type": "Drag&Drop",
        "Knowledge": "A < B means if A is less than B, A<= B means if A is less or equal to B, same for > and >. A == B means if A is equal to B and A != B means if A is not equal to B",
        "Instruction": "If we want the following code evaluted to be true, what operator will we fill into the block?",
        "Code": [
          "x = 3 [?] 4",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [
          ">",
          ">=",
          "<",
          "<=",
          "==",
          "!="
        ],
        "Choice": [],
        "Hint": "Use the principle of boolean expression to find the answer!"
      },
      {
        "Answer": [
          "True",
          "False"
        ],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Fill out the blank below to let x evaluted to be false and y evaluted to vbe true",
        "Code": [
          "x = [?] >= [?]",
          "y = [?] < [?]"
        ],
        "Console": "2",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "A >= B means if A is greater or equal to B and A < B means if A is less than B."
      },
      {
        "Answer": [
          "False"
        ],
        "Type": "MultipleChoice",
        "Knowledge": null,
        "Instruction": "What will be the result of 3 != 3?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "True",
          "False"
        ],
        "Hint": "A != B means if A is not equal to B."
      },
      {
        "Answer": [
          "True"
        ],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Fill out the following blank to let x is evaluted to be true.",
        "Code": [
          "x = [?] == [?]",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "A == B means if A is equal to B"
      },
      {
        "Answer": [],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Rearrange the following code and see the different results!",
        "Code": [
          "A = 2 > 3",
          "A = 3 < 5",
          "print(A)"
        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "See how many possible answers are there!"
      }
    ]
  },
  {
    "Available": "false",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Logic",
    "Total": "7",
    "Position": "4L2",
    "Question": [
      {
        "Answer": [
          "2"
        ],
        "Type": "MultipleChoice",
        "Knowledge": "Logical expression in python are 'And', 'Or', 'Not' and they will only return 'True' or 'False'",
        "Instruction": "What result will be given by expression 'True and False?'",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "True",
          "False"
        ],
        "Hint": "A and B is true if and only if both A and B are evaluated to be true."
      },
      {
        "Answer": [
          "True"
        ],
        "Type": "Drag&Drop",
        "Knowledge": null,
        "Instruction": "Fill the bland with right answer to let z evaluted to be True.",
        "Code": [
          "x = 3 [?] 2",
          "y = 4 [?] 3",
          "z = x [?] y",
          "print(z)"
        ],
        "Console": "1",
        "CodeBlock": [
          "<",
          "<=",
          ">",
          ">=",
          "==",
          "!="
        ],
        "Choice": [
          "True",
          "False"
        ],
        "Hint": "Use the knowlegde or Boolean expression and Logical expression to solve this problem!"
      },
      {
        "Answer": [
          "True"
        ],
        "Type": "Drag&Drop",
        "Knowledge": null,
        "Instruction": "Drag and drop code block into right position to make A evaluated to be true",
        "Code": [
          "A = true",
          "B = A or A",
          "A = ([?] (A and B) [?] B)",
          "print(A)"
        ],
        "Console": "1",
        "CodeBlock": [
          "and",
          "or",
          "not"
        ],
        "Choice": [],
        "Hint": "There should be more than 1 answer, try it out!"
      },
      {
        "Answer": [
          "false"
        ],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Think about the code given below, find the answer that let B evaluted to be false.",
        "Code": [
          "A = [?] < [?]",
          "B = [?] A",
          "B = A [?] B",
          "print(B)"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "If A is true, then not A will be false."
      },
      {
        "Answer": [
          "false"
        ],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Think about the code given below, find the answer that let B evaluted to be false.",
        "Code": [
          "A = 3 [?] 4",
          "B = 5 [?] 2",
          "C = 2 [?] 2",
          "print(A)",
          "print(B)",
          "print(C)"
        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Try to solve it step by step!"
      },
      {
        "Answer": ["True"],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Rearrange the following code and see the different results!",
        "Code": [
          "A = 2 > 3",
          "B = 4 <= 2",
          "C = 2 != 2",
          "A = (C and B) or A",
          "B = (C or B) and (A or C)",
          "C = not A",
          "print(C)"
        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "See how many possible answers are there!"
      },
      {
        "Answer": ["False"],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Rearrange the following code to see if you can make A, B, C all evaluted to be true !",
        "Code": [
          "A = 2 == 3",
          "B = 3 != 2",
          "C = 2 >= 1",
          "A = (C and B) or A",
          "B = (C or B) and (A or C)",
          "C = not A",
          "print(C)"
        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "There might be more than one available answer!"
      }
    ]
  },
  {
    "Available": "false",
    "Unit": "1",
    "Type": "Lecture",
    "Title": "Array",
    "Total": "3",
    "Position": "5R1",
    "Question": [
      {
        "Answer":["1"],
        "Type": "MultipleChoice",
        "Knowledge": "Array is the collection of elements of any data type. Index of an array start at 0.",
        "Instruction": "What will be the index of '5' in array [5,1,3,4]?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "0",
          "1",
          "2",
          "3"
        ],
        "Hint": "Array index start at 0"
      },
      {
        "Answer": [
          "[1,2,3,5,7,9]"
        ],
        "Type": "Drag&Drop",
        "Knowledge": null,
        "Instruction": "Drag the code block into the right place to achieve a sorted array.",
        "Code": [
          "x = [[?],[?],[?],[?],[?],[?]]",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [
          "5",
          "7",
          "1",
          "9",
          "2",
          "3"
        ],
        "Choice": [],
        "Hint": "Sorted array looks like [1,2,3,4,5]"
      },
      {
        "Answer": [],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Put different numbers in the array and see what are the printed result.",
        "Code": [
          "x = [[?],[?],[?],[?],[?],[?]]",
          "print(x)"
        ],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Play with the array and see the different outcomes."
      }
    ]
  },
  {
    "Available": "false",
    "Type": "Quiz",
    "Unit": "1",
    "Title": "Quiz",
    "Total": "4",
    "Position": "6R0",
    "Question": [
      {
        "Answer": [
          "None"
        ],
        "Type": "MultipleChoice",
        "Knowledge": "Array is the collection of elements of any data type. Index of an array start at 0.",
        "Instruction": "What will be the index of '1' in array [5,2,3,4]?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "0",
          "1",
          "2",
          "None"
        ],
        "Hint": "Array index start at 0"
      },
      {
        "Answer": [
          "1"
        ],
        "Type": "MultipleChoice",
        "Knowledge": null,
        "Instruction": "What's the result for (-10 + 20) /5 * 15 % 3?",
        "Code": [],
        "Console": "1",
        "CodeBlock": [],
        "Choice": [
          "0",
          "1",
          "2",
          "3"
        ],
        "Hint": "% follows the same rule for the positive and the negative number."
      },
      {
        "Answer": ["False"],
        "Type": "Rearrange",
        "Knowledge": null,
        "Instruction": "Rearrange the following code to see if you can make A, B, C all evaluted to be true !",
        "Code": [
          "A = 3 != 3",
          "B = 5 == 2",
          "C = 2 >= 1",
          "C = not C",
          "C = B and (not C)",
          "print(C)"
        ],
        "Console": "3",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "There might be more than one available answer!"
      },
      {
        "Answer": [
          "[2,8,10,12,15,7]"
        ],
        "Type": "ShortAnswer",
        "Knowledge": null,
        "Instruction": "Put the answer for the array after we changed the value for it.",
        "Code": [
          "x = [1,3,6,4,5,2]",
          "x[0] = 2",
          "x[1] = 8",
          "x[2] = 10",
          "x[3] = 12",
          "x[4] = 15",
          "x[5] = 7",
          "x = [[?],[?],[?],[?],[?],[?]]",
          "print(x[0])",
          "print(x[1])",
          "print(x[2])",
          "print(x[3])",
          "print(x[4])",
          "print(x[5])"
        ],
        "Console": "6",
        "CodeBlock": [],
        "Choice": [],
        "Hint": "Play with the array and see the different outcomes."
      }
    ]
  }
]